[
  {
    "name": "auth.revoke",
    "args": [
      {
        "name": "test",
        "type": "bool"
      }
    ]
  },
  {
    "name": "auth.test",
    "proxy": true,
    "return": "objects.AuthTestResponse"
  },
  {
    "name": "bots.info",
    "proxy": true,
    "return": "objects.Bot",
    "args": [
      {
        "name": "bot",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "channels.archive",
    "args": [
      {
        "name": "channel",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "channels.create",
    "side_effects": true,
    "args": [
      {
        "name": "name",
        "type": "string",
        "required": true
      },
      {
        "name": "validate",
        "type": "bool"
      }
    ]
  },
  {
    "name": "channels.history",
    "proxy": true,
    "return": "objects.ChannelsHistoryResponse",
    "args": [
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "count",
        "type": "int",
        "comment": "1 - 1000"
      },
      {
        "name": "inclusive",
        "type": "bool"
      },
      {
        "name": "latest",
        "type": "string",
        "comment": "Range of time (end)"
      },
      {
        "name": "oldest",
        "type": "string",
        "comment": "Range of time (start)"
      },
      {
        "name": "timestamp",
        "query_name": "ts",
        "type": "string",
        "comment": "Used only when retrieving a single message"
      },
      {
        "name": "unreads",
        "type": "bool",
        "comment": "Include unread_count_display in the output"
      }
    ]
  },
  {
    "name": "channels.info",
    "proxy": true,
    "return": "objects.Channel",
    "json": "channel",
    "args": [
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "includeLocale",
        "query_name": "include_locale",
        "type": "bool"
      }
    ]
  },
  {
    "name": "channels.invite",
    "return": "objects.Channel",
    "json": "channel",
    "args": [
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "user",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "channels.join",
    "proxy": true,
    "return": "objects.Channel",
    "args": [
      {
        "name": "name",
        "type": "string",
        "required": true
      },
      {
        "name": "validate",
        "type": "bool"
      }
    ]
  },
  {
    "name": "channels.kick",
    "args": [
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "user",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "channels.leave",
    "proxy": true,
    "args": [
      {
        "name": "channel",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "channels.list",
    "proxy": true,
    "return": "objects.ChannelList",
    "json": "channels",
    "args": [
      {
        "name": "excludeArchive",
        "query_name": "exclude_archive",
        "comment": "Exclude archived channels",
        "type": "bool"
      },
      {
        "name": "excludeMembers",
        "query_name": "exclude_members",
        "comment": "Exclude the list of members in channels",
        "type": "bool"
      },
      {
        "name": "limit",
        "type": "int"
      }
    ]
  },
  {
    "name": "channels.mark",
    "proxy": true,
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "timestamp",
        "query_name": "ts",
        "type": "string"
      }
    ]
  },
  {
    "name": "channels.rename",
    "return": "objects.Channel",
    "json": "channel",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "name",
        "required": true,
        "type": "string"
      },
      {
        "name": "validate",
        "type": "bool"
      }
    ]
  },
  {
    "name": "channels.replies",
    "return": "objects.MessageList",
    "json": "messages",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "threadTimestamp",
        "query_name": "thread_ts",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "channels.setPurpose",
    "return": "string",
    "json": "purpose",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "purpose",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "channels.setTopic",
    "return": "string",
    "json": "topic",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "topic",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "channels.unarchive",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "chat.postEphemeral",
    "return": "objects.EphemeralResponse",
    "args": [
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "text",
        "type": "string",
        "required": true
      },
      {
        "name": "user",
        "type": "string",
        "required": true
      },
      {
        "name": "asUser",
        "query_name": "as_user",
        "type": "bool"
      },
      {
        "name": "attachments",
        "type": "objects.AttachmentList"
      },
      {
        "name": "linkNames",
        "type": "bool"
      },
      {
        "name": "parse",
        "type": "string"
      },
      {
        "name": "blocks",
        "type": "objects.BlockList"
      }
    ]
  },
  {
    "name": "chat.getPermalink",
    "return": "objects.PermalinkResponse",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "messageTimestamp",
        "query_name": "message_ts",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "chat.postMessage",
    "return": "objects.ChatResponse",
    "args": [
      {
        "name": "asUser",
        "query_name": "as_user",
        "type": "bool"
      },
      {
        "name": "attachments",
        "type": "objects.AttachmentList"
      },
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "escapeText",
        "type": "bool"
      },
      {
        "name": "iconEmoji",
        "type": "string"
      },
      {
        "name": "iconURL",
        "type": "string"
      },
      {
        "name": "linkNames",
        "type": "bool"
      },
      {
        "name": "markdown",
        "type": "bool"
      },
      {
        "name": "parse",
        "type": "string"
      },
      {
        "name": "text",
        "type": "string"
      },
      {
        "name": "unfurlLinks",
        "type": "bool"
      },
      {
        "name": "unfurlMedia",
        "type": "bool"
      },
      {
        "name": "username",
        "type": "string"
      },
      {
        "name": "blocks",
        "type": "objects.BlockList"
      }
    ]
  },
  {
    "name": "chat.unfurl",
    "args": [
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "timestamp",
        "query_name": "ts",
        "required": true,
        "type": "string"
      },
      {
        "name": "unfurls",
        "required": true,
        "type": "string"
      },
      {
        "name": "userAuthRequired",
        "query_name": "user_auth_required",
        "type": "bool"
      }
    ]
  },
  {
    "name": "chat.update",
    "return": "objects.ChatResponse",
    "args": [
      {
        "name": "asUser",
        "query_name": "as_user",
        "type": "bool"
      },
      {
        "name": "attachments",
        "type": "objects.AttachmentList"
      },
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "linkNames",
        "type": "bool"
      },
      {
        "name": "parse",
        "type": "string"
      },
      {
        "name": "timestamp",
        "query_name": "ts",
        "type": "string"
      },
      {
        "name": "text",
        "type": "string"
      },
      {
        "name": "blocks",
        "type": "objects.BlockList"
      }
    ]
  },
  {
    "name": "chat.delete",
    "return": "objects.ChatResponse",
    "args": [
      {
        "name": "asUser",
        "query_name": "as_user",
        "type": "bool"
      },
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "timestamp",
        "query_name": "ts",
        "type": "string"
      }
    ]
  },
  {
    "name": "chat.meMessage",
    "return": "objects.ChatResponse",
    "args": [
      {
        "name": "channel",
        "type": "string",
        "required": true
      },
      {
        "name": "text",
        "type": "string"
      }
    ]
  },
  {
    "name": "dialog.open",
    "return": "objects.DialogResponse",
    "args": [
      {
        "name": "dialog",
        "type": "*objects.Dialog",
        "required": true
      },
      {
        "name": "trigger_id",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "emoji.list",
    "proxy": true,
    "return": "objects.EmojiListResponse"
  },
  {
    "name": "groups.archive",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.create",
    "return": "objects.Group",
    "json": "group",
    "args": [
      {
        "name": "name",
        "required": true,
        "type": "string"
      },
      {
        "name": "validate",
        "type": "bool"
      }
    ]
  },
  {
    "name": "groups.createChild",
    "return": "objects.Group",
    "json": "group",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.history",
    "proxy": true,
    "return": [
      "string",
      "objects.MessageList"
    ],
    "json": [
      "latest",
      "messages"
    ],
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "count",
        "type": "int"
      },
      {
        "name": "inclusive",
        "type": "bool"
      },
      {
        "name": "latest",
        "type": "string"
      },
      {
        "name": "oldest",
        "type": "string"
      },
      {
        "name": "unreads",
        "type": "bool"
      }
    ]
  },
  {
    "name": "groups.info",
    "proxy": true,
    "return": "objects.Group",
    "json": "group",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "includeLocale",
        "query_name": "include_locale",
        "type": "bool"
      }
    ]
  },
  {
    "name": "groups.invite",
    "return": [
      "objects.Group",
      "bool"
    ],
    "json": [
      "group",
      "already_in_group"
    ],
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "user",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.kick",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "user",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.leave",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.list",
    "proxy": true,
    "return": "objects.GroupList",
    "json": "groups",
    "args": [
      {
        "name": "excludeArchived",
        "query_name": "exclude_archived",
        "type": "bool"
      },
      {
        "name": "excludeMembers",
        "query_name": "exclude_members",
        "type": "bool"
      }
    ]
  },
  {
    "name": "groups.mark",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "timestamp",
        "query_name": "ts",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.open",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.rename",
    "return": "objects.Group",
    "json": "group",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "name",
        "required": true,
        "type": "string"
      },
      {
        "name": "validate",
        "type": "bool"
      }
    ]
  },
  {
    "name": "groups.replies",
    "proxy": true,
    "return": [
      "objects.MessageList",
      "objects.ThreadInfo"
    ],
    "json": [
      "messages",
      "thread_info"
    ],
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "threadTimestamp",
        "query_name": "thread_ts",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.setPurpose",
    "return": "string",
    "json": "purpose",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "purpose",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.setTopic",
    "return": "string",
    "json": "topic",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      },
      {
        "name": "topic",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "groups.unarchive",
    "args": [
      {
        "name": "channel",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "oauth.access",
    "proxy": true,
    "skip_token": true,
    "group": "OAuth",
    "return": "objects.OAuthAccessResponse",
    "args": [
      {
        "name": "clientID",
        "type": "string",
        "query_name": "client_id",
        "required": true
      },
      {
        "name": "clientSecret",
        "type": "string",
        "query_name": "client_secret",
        "required": true
      },
      {
        "name": "code",
        "type": "string",
        "required": true
      },
      {
        "name": "redirectURI",
        "type": "string",
        "query_name": "redirect_uri"
      }
    ]
  },
  {
    "name": "reactions.add",
    "args": [
      {
        "name": "name",
        "type": "string",
        "required": true
      },
      {
        "name": "file",
        "type": "string"
      },
      {
        "name": "fileComment",
        "type": "string"
      },
      {
        "name": "channel",
        "type": "string"
      },
      {
        "name": "timestamp",
        "type": "string"
      }
    ]
  },
  {
    "name": "reactions.get",
    "proxy": true,
    "return": "objects.ReactionsGetResponse",
    "args": [
      {
        "name": "file",
        "type": "string"
      },
      {
        "name": "fileComment",
        "type": "string"
      },
      {
        "name": "channel",
        "type": "string"
      },
      {
        "name": "timestamp",
        "type": "string"
      },
      {
        "name": "full",
        "type": "bool"
      }
    ]
  },
  {
    "name": "reactions.list",
    "proxy": true,
    "return": "objects.ReactionsListResponse",
    "args": [
      {
        "name": "user",
        "type": "string"
      },
      {
        "name": "full",
        "type": "bool"
      },
      {
        "name": "count",
        "type": "int"
      },
      {
        "name": "page",
        "type": "int"
      }
    ]
  },
  {
    "name": "reactions.remove",
    "args": [
      {
        "name": "name",
        "type": "string",
        "required": true
      },
      {
        "name": "file",
        "type": "string"
      },
      {
        "name": "fileComment",
        "type": "string"
      },
      {
        "name": "channel",
        "type": "string"
      },
      {
        "name": "timestamp",
        "type": "string"
      }
    ]
  },
  {
    "name": "reminders.add",
    "return": "objects.Reminder",
    "args": [
      {
        "name": "text",
        "type": "string",
        "required": true
      },
      {
        "name": "time",
        "type": "int",
        "required": true
      },
      {
        "name": "user",
        "type": "string"
      }
    ]
  },
  {
    "name": "reminders.complete",
    "args": [
      {
        "name": "reminder",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "reminders.delete",
    "args": [
      {
        "name": "reminder",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "reminders.info",
    "return": "objects.Reminder",
    "args": [
      {
        "name": "reminder",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "reminders.list",
    "return": "objects.ReminderList",
    "json": "reminders"
  },
  {
    "name": "rtm.start",
    "proxy": true,
    "return": "objects.RTMResponse",
    "group": "RTM"
  },
  {
    "name": "users.deletePhoto"
  },
  {
    "name": "users.getPresence",
    "return": "objects.UserPresence",
    "args": [
      {
        "name": "user",
        "type": "string",
        "required": true
      }
    ]
  },
  {
    "name": "users.identity",
    "proxy": true,
    "return": [
      "objects.UserProfile",
      "objects.Team"
    ],
    "json": [
      "user",
      "team"
    ]
  },
  {
    "name": "users.info",
    "proxy": true,
    "return": "objects.User",
    "json": "user",
    "args": [
      {
        "name": "user",
        "required": true,
        "type": "string"
      },
      {
        "name": "includeLocale",
        "query_name": "include_locale",
        "type": "bool"
      }
    ]
  },
  {
    "name": "users.list",
    "proxy": true,
    "return": "objects.UserList",
    "json": "members",
    "args": [
      {
        "name": "presence",
        "type": "bool"
      },
      {
        "name": "limit",
        "type": "int"
      },
      {
        "name": "includeLocale",
        "query_name": "include_locale",
        "type": "bool"
      }
    ]
  },
  {
    "name": "users.lookupByEmail",
    "proxy": true,
    "return": "objects.User",
    "json": "user",
    "args": [
      {
        "name": "email",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "users.setActive"
  },
  {
    "name": "users.setPresence",
    "args": [
      {
        "name": "presence",
        "required": true,
        "type": "string"
      }
    ]
  },
  {
    "name": "users.profile.get",
    "proxy": true,
    "return": "objects.UserProfile",
    "args": [
      {
        "name": "user",
        "type": "string"
      },
      {
        "name": "includeLabels",
        "query_name": "include_labels",
        "type": "bool"
      }
    ]
  },
  {
    "name": "users.profile.set",
    "return": "objects.UserProfile",
    "args": [
      {
        "name": "user",
        "type": "string"
      },
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "value",
        "type": "string"
      },
      {
        "name": "profile",
        "type": "*objects.UserProfile"
      }
    ]
  },
  {
    "name": "usergroups.create",
    "return": "objects.Usergroup",
    "json": "usergroup",
    "args": [
      {
        "name": "name",
        "required": true,
        "type": "string"
      },
      {
        "name": "channels",
        "type": "string",
        "comment": "Comma-separated list of channels IDs"
      },
      {
        "name": "description",
        "type": "string"
      },
      {
        "name": "handle",
        "type": "string"
      },
      {
        "name": "includeCount",
        "query_name": "include_count",
        "type": "bool"
      }
    ]
  },
  {
    "name": "usergroups.disable",
    "return": "objects.Usergroup",
    "json": "usergroup",
    "args": [
      {
        "name": "usergroup",
        "required": true,
        "type": "string"
      },
      {
        "name": "includeCount",
        "query_name": "include_count",
        "type": "bool"
      }
    ]
  },
  {
    "name": "usergroups.enable",
    "return": "objects.Usergroup",
    "json": "usergroup",
    "args": [
      {
        "name": "usergroup",
        "required": true,
        "type": "string"
      },
      {
        "name": "includeCount",
        "query_name": "include_count",
        "type": "bool"
      }
    ]
  },
  {
    "name": "usergroups.list",
    "proxy": true,
    "return": "objects.UsergroupList",
    "json": "usergroups",
    "args": [
      {
        "name": "includeCount",
        "query_name": "include_count",
        "type": "bool"
      },
      {
        "name": "includeDisabled",
        "query_name": "include_disabled",
        "type": "bool"
      },
      {
        "name": "includeUsers",
        "query_name": "include_users",
        "type": "bool"
      }
    ]
  },
  {
    "name": "usergroups.update",
    "return": "objects.Usergroup",
    "json": "usergroup",
    "args": [
      {
        "name": "usergroup",
        "required": true,
        "type": "string"
      },
      {
        "name": "channels",
        "type": "string",
        "comment": "Comma-separated list of channels IDs"
      },
      {
        "name": "description",
        "type": "string"
      },
      {
        "name": "handle",
        "type": "string"
      },
      {
        "name": "includeCount",
        "query_name": "include_count",
        "type": "bool"
      },
      {
        "name": "name",
        "type": "string"
      }
    ]
  },
  {
    "name": "usergroups.users.list",
    "proxy": true,
    "return": "objects.UsergroupUsersList",
    "json": "users",
    "args": [
      {
        "name": "usergroup",
        "required": true,
        "type": "string"
      },
      {
        "name": "includeDisabled",
        "query_name": "include_disabled",
        "type": "bool"
      }
    ]
  },
  {
    "name": "usergroups.users.update",
    "return": "objects.Usergroup",
    "json": "usergroup",
    "args": [
      {
        "name": "usergroup",
        "required": true,
        "type": "string"
      },
      {
        "name": "users",
        "required": true,
        "type": "string",
        "comment": "Comma-separated list of user IDs"
      },
      {
        "name": "includeCount",
        "query_name": "include_count",
        "type": "bool"
      }
    ]
  }
]
